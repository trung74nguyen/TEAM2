//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApplication
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class CMART2Entities1 : DbContext
    {
        public CMART2Entities1()
            : base("name=CMART2Entities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Account> Accounts { get; set; }
        public DbSet<Bill> Bills { get; set; }
        public DbSet<BillDetail> BillDetails { get; set; }
        public DbSet<BranchImportBallot> BranchImportBallots { get; set; }
        public DbSet<BranchImportBallotDetail> BranchImportBallotDetails { get; set; }
        public DbSet<HeadquaterImportBallot> HeadquaterImportBallots { get; set; }
        public DbSet<HeadquaterImportBallotDetail> HeadquaterImportBallotDetails { get; set; }
        public DbSet<PriceHistory> PriceHistories { get; set; }
        public DbSet<Product> Products { get; set; }
        public DbSet<ProductCategory> ProductCategories { get; set; }
        public DbSet<PromotionInformation> PromotionInformations { get; set; }
        public DbSet<ProposeBallot> ProposeBallots { get; set; }
        public DbSet<ProposeBallotDetail> ProposeBallotDetails { get; set; }
        public DbSet<Supplier> Suppliers { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual int SP_ACCOUNT_ID_AUTO(ObjectParameter cODE)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACCOUNT_ID_AUTO", cODE);
        }
    
        public virtual int SP_ACCOUNT_INSERT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACCOUNT_INSERT");
        }
    
        public virtual ObjectResult<string> SP_AccountName(string accountID)
        {
            var accountIDParameter = accountID != null ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_AccountName", accountIDParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int SP_BILL_BALLOTNUM_AUTO(ObjectParameter bALLOTNUM)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BILL_BALLOTNUM_AUTO", bALLOTNUM);
        }
    
        public virtual int SP_BILL_INSERT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BILL_INSERT");
        }
    
        public virtual int SP_BRANCHIMPORTBALLOT_ID_AUTO(ObjectParameter bRACHBALLOT)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BRANCHIMPORTBALLOT_ID_AUTO", bRACHBALLOT);
        }
    
        public virtual int SP_BRANCHIMPORTBALLOT_INSERT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BRANCHIMPORTBALLOT_INSERT");
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_HEADQUATERIMPORTBALLOT_BALLOTNUM_AUTO(ObjectParameter bALLOTNUM)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HEADQUATERIMPORTBALLOT_BALLOTNUM_AUTO", bALLOTNUM);
        }
    
        public virtual int SP_HEADQUATERIMPORTBALLOT_INSERT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HEADQUATERIMPORTBALLOT_INSERT");
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_PRODUCT_ID_AUTO(ObjectParameter cODE)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PRODUCT_ID_AUTO", cODE);
        }
    
        public virtual int SP_PRODUCT_INSERT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PRODUCT_INSERT");
        }
    
        public virtual int SP_PRODUCTCATEGORIES_ID_AUTO(ObjectParameter cODE)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PRODUCTCATEGORIES_ID_AUTO", cODE);
        }
    
        public virtual int SP_PRODUCTCATEGORIES_INSERT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PRODUCTCATEGORIES_INSERT");
        }
    
        public virtual int SP_PROMOTIONINFORMATION_ID_AUTO(ObjectParameter cODE)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PROMOTIONINFORMATION_ID_AUTO", cODE);
        }
    
        public virtual int SP_PROMOTIONINFORMATION_INSERT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PROMOTIONINFORMATION_INSERT");
        }
    
        public virtual int SP_PROPOSEBALLOT_ID_AUTO(ObjectParameter cODE)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PROPOSEBALLOT_ID_AUTO", cODE);
        }
    
        public virtual int SP_PROPOSEBALLOT_INSERT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PROPOSEBALLOT_INSERT");
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int SP_SUPPLIER_ID_AUTO(ObjectParameter cODE)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SUPPLIER_ID_AUTO", cODE);
        }
    
        public virtual int SP_SUPPLIER_INSERT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SUPPLIER_INSERT");
        }
    
        public virtual int SP_THONGKEDOANHTHU(Nullable<int> tHANG, Nullable<int> nAM)
        {
            var tHANGParameter = tHANG.HasValue ?
                new ObjectParameter("THANG", tHANG) :
                new ObjectParameter("THANG", typeof(int));
    
            var nAMParameter = nAM.HasValue ?
                new ObjectParameter("NAM", nAM) :
                new ObjectParameter("NAM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_THONGKEDOANHTHU", tHANGParameter, nAMParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int usp_AccountDelete(string accountCode)
        {
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AccountDelete", accountCodeParameter);
        }
    
        public virtual ObjectResult<usp_AccountInsert_Result> usp_AccountInsert(string accountCode, string fullName, string address, string phone, string identityCard, string account, string password, string authorities)
        {
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var identityCardParameter = identityCard != null ?
                new ObjectParameter("IdentityCard", identityCard) :
                new ObjectParameter("IdentityCard", typeof(string));
    
            var accountParameter = account != null ?
                new ObjectParameter("Account", account) :
                new ObjectParameter("Account", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var authoritiesParameter = authorities != null ?
                new ObjectParameter("Authorities", authorities) :
                new ObjectParameter("Authorities", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AccountInsert_Result>("usp_AccountInsert", accountCodeParameter, fullNameParameter, addressParameter, phoneParameter, identityCardParameter, accountParameter, passwordParameter, authoritiesParameter);
        }
    
        public virtual ObjectResult<usp_AccountSelect_Result> usp_AccountSelect(string accountCode)
        {
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AccountSelect_Result>("usp_AccountSelect", accountCodeParameter);
        }
    
        public virtual ObjectResult<usp_AccountUpdate_Result> usp_AccountUpdate(string accountCode, string fullName, string address, string phone, string identityCard, string account, string password, string authorities)
        {
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var identityCardParameter = identityCard != null ?
                new ObjectParameter("IdentityCard", identityCard) :
                new ObjectParameter("IdentityCard", typeof(string));
    
            var accountParameter = account != null ?
                new ObjectParameter("Account", account) :
                new ObjectParameter("Account", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var authoritiesParameter = authorities != null ?
                new ObjectParameter("Authorities", authorities) :
                new ObjectParameter("Authorities", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AccountUpdate_Result>("usp_AccountUpdate", accountCodeParameter, fullNameParameter, addressParameter, phoneParameter, identityCardParameter, accountParameter, passwordParameter, authoritiesParameter);
        }
    
        public virtual int usp_BillDelete(string ballotNum)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_BillDelete", ballotNumParameter);
        }
    
        public virtual int usp_BillDetailDelete(string ballotNum, string productCode)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_BillDetailDelete", ballotNumParameter, productCodeParameter);
        }
    
        public virtual ObjectResult<usp_BillDetailInsert_Result> usp_BillDetailInsert(string ballotNum, string productCode, Nullable<double> unitPrice, Nullable<int> number)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var unitPriceParameter = unitPrice.HasValue ?
                new ObjectParameter("UnitPrice", unitPrice) :
                new ObjectParameter("UnitPrice", typeof(double));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BillDetailInsert_Result>("usp_BillDetailInsert", ballotNumParameter, productCodeParameter, unitPriceParameter, numberParameter);
        }
    
        public virtual ObjectResult<usp_BillDetailSelect_Result> usp_BillDetailSelect(string ballotNum, string productCode)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BillDetailSelect_Result>("usp_BillDetailSelect", ballotNumParameter, productCodeParameter);
        }
    
        public virtual ObjectResult<usp_BillDetailSelectAll_Result> usp_BillDetailSelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BillDetailSelectAll_Result>("usp_BillDetailSelectAll");
        }
    
        public virtual ObjectResult<usp_BillDetailUpdate_Result> usp_BillDetailUpdate(string ballotNum, string productCode, Nullable<double> unitPrice, Nullable<int> number)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var unitPriceParameter = unitPrice.HasValue ?
                new ObjectParameter("UnitPrice", unitPrice) :
                new ObjectParameter("UnitPrice", typeof(double));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BillDetailUpdate_Result>("usp_BillDetailUpdate", ballotNumParameter, productCodeParameter, unitPriceParameter, numberParameter);
        }
    
        public virtual ObjectResult<usp_BillInsert_Result> usp_BillInsert(string ballotNum, Nullable<System.DateTime> date, Nullable<double> total, Nullable<double> guestMoney, Nullable<double> excessCash, Nullable<int> totalNum, Nullable<int> pOS, string accountCode)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(double));
    
            var guestMoneyParameter = guestMoney.HasValue ?
                new ObjectParameter("GuestMoney", guestMoney) :
                new ObjectParameter("GuestMoney", typeof(double));
    
            var excessCashParameter = excessCash.HasValue ?
                new ObjectParameter("ExcessCash", excessCash) :
                new ObjectParameter("ExcessCash", typeof(double));
    
            var totalNumParameter = totalNum.HasValue ?
                new ObjectParameter("TotalNum", totalNum) :
                new ObjectParameter("TotalNum", typeof(int));
    
            var pOSParameter = pOS.HasValue ?
                new ObjectParameter("POS", pOS) :
                new ObjectParameter("POS", typeof(int));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BillInsert_Result>("usp_BillInsert", ballotNumParameter, dateParameter, totalParameter, guestMoneyParameter, excessCashParameter, totalNumParameter, pOSParameter, accountCodeParameter);
        }
    
        public virtual ObjectResult<usp_BillSelect_Result> usp_BillSelect(string ballotNum)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BillSelect_Result>("usp_BillSelect", ballotNumParameter);
        }
    
        public virtual ObjectResult<usp_BillSelectAll_Result> usp_BillSelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BillSelectAll_Result>("usp_BillSelectAll");
        }
    
        public virtual ObjectResult<usp_BillUpdate_Result> usp_BillUpdate(string ballotNum, Nullable<System.DateTime> date, Nullable<double> total, Nullable<double> guestMoney, Nullable<double> excessCash, Nullable<int> totalNum, Nullable<int> pOS, string accountCode)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(double));
    
            var guestMoneyParameter = guestMoney.HasValue ?
                new ObjectParameter("GuestMoney", guestMoney) :
                new ObjectParameter("GuestMoney", typeof(double));
    
            var excessCashParameter = excessCash.HasValue ?
                new ObjectParameter("ExcessCash", excessCash) :
                new ObjectParameter("ExcessCash", typeof(double));
    
            var totalNumParameter = totalNum.HasValue ?
                new ObjectParameter("TotalNum", totalNum) :
                new ObjectParameter("TotalNum", typeof(int));
    
            var pOSParameter = pOS.HasValue ?
                new ObjectParameter("POS", pOS) :
                new ObjectParameter("POS", typeof(int));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BillUpdate_Result>("usp_BillUpdate", ballotNumParameter, dateParameter, totalParameter, guestMoneyParameter, excessCashParameter, totalNumParameter, pOSParameter, accountCodeParameter);
        }
    
        public virtual int usp_BranchImportBallotDelete(string ballotNum)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_BranchImportBallotDelete", ballotNumParameter);
        }
    
        public virtual int usp_BranchImportBallotDetailDelete(string ballotNum, string productCode)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_BranchImportBallotDetailDelete", ballotNumParameter, productCodeParameter);
        }
    
        public virtual ObjectResult<usp_BranchImportBallotDetailInsert_Result> usp_BranchImportBallotDetailInsert(string ballotNum, string productCode, Nullable<int> number, string state)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BranchImportBallotDetailInsert_Result>("usp_BranchImportBallotDetailInsert", ballotNumParameter, productCodeParameter, numberParameter, stateParameter);
        }
    
        public virtual ObjectResult<usp_BranchImportBallotDetailSelect_Result> usp_BranchImportBallotDetailSelect(string ballotNum, string productCode)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BranchImportBallotDetailSelect_Result>("usp_BranchImportBallotDetailSelect", ballotNumParameter, productCodeParameter);
        }
    
        public virtual ObjectResult<usp_BranchImportBallotDetailUpdate_Result> usp_BranchImportBallotDetailUpdate(string ballotNum, string productCode, Nullable<int> number, string state)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BranchImportBallotDetailUpdate_Result>("usp_BranchImportBallotDetailUpdate", ballotNumParameter, productCodeParameter, numberParameter, stateParameter);
        }
    
        public virtual ObjectResult<usp_BranchImportBallotInsert_Result> usp_BranchImportBallotInsert(string ballotNum, string headquaterBallotNum, Nullable<System.DateTime> inputDate, string branch, string accountCode)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            var headquaterBallotNumParameter = headquaterBallotNum != null ?
                new ObjectParameter("HeadquaterBallotNum", headquaterBallotNum) :
                new ObjectParameter("HeadquaterBallotNum", typeof(string));
    
            var inputDateParameter = inputDate.HasValue ?
                new ObjectParameter("InputDate", inputDate) :
                new ObjectParameter("InputDate", typeof(System.DateTime));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BranchImportBallotInsert_Result>("usp_BranchImportBallotInsert", ballotNumParameter, headquaterBallotNumParameter, inputDateParameter, branchParameter, accountCodeParameter);
        }
    
        public virtual ObjectResult<usp_BranchImportBallotSelect_Result> usp_BranchImportBallotSelect(string ballotNum)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BranchImportBallotSelect_Result>("usp_BranchImportBallotSelect", ballotNumParameter);
        }
    
        public virtual ObjectResult<usp_BranchImportBallotUpdate_Result> usp_BranchImportBallotUpdate(string ballotNum, string headquaterBallotNum, Nullable<System.DateTime> inputDate, string branch, string accountCode)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            var headquaterBallotNumParameter = headquaterBallotNum != null ?
                new ObjectParameter("HeadquaterBallotNum", headquaterBallotNum) :
                new ObjectParameter("HeadquaterBallotNum", typeof(string));
    
            var inputDateParameter = inputDate.HasValue ?
                new ObjectParameter("InputDate", inputDate) :
                new ObjectParameter("InputDate", typeof(System.DateTime));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BranchImportBallotUpdate_Result>("usp_BranchImportBallotUpdate", ballotNumParameter, headquaterBallotNumParameter, inputDateParameter, branchParameter, accountCodeParameter);
        }
    
        public virtual int usp_HeadquaterImportBallotDelete(string ballotNum)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HeadquaterImportBallotDelete", ballotNumParameter);
        }
    
        public virtual int usp_HeadquaterImportBallotDetailDelete(string ballotNum, string productCode)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HeadquaterImportBallotDetailDelete", ballotNumParameter, productCodeParameter);
        }
    
        public virtual ObjectResult<usp_HeadquaterImportBallotDetailInsert_Result> usp_HeadquaterImportBallotDetailInsert(string ballotNum, string productCode, Nullable<int> number, Nullable<double> inputPrice, Nullable<System.DateTime> eXP, string state)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            var inputPriceParameter = inputPrice.HasValue ?
                new ObjectParameter("InputPrice", inputPrice) :
                new ObjectParameter("InputPrice", typeof(double));
    
            var eXPParameter = eXP.HasValue ?
                new ObjectParameter("EXP", eXP) :
                new ObjectParameter("EXP", typeof(System.DateTime));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HeadquaterImportBallotDetailInsert_Result>("usp_HeadquaterImportBallotDetailInsert", ballotNumParameter, productCodeParameter, numberParameter, inputPriceParameter, eXPParameter, stateParameter);
        }
    
        public virtual ObjectResult<usp_HeadquaterImportBallotDetailSelect_Result> usp_HeadquaterImportBallotDetailSelect(string ballotNum, string productCode)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HeadquaterImportBallotDetailSelect_Result>("usp_HeadquaterImportBallotDetailSelect", ballotNumParameter, productCodeParameter);
        }
    
        public virtual ObjectResult<usp_HeadquaterImportBallotDetailUpdate_Result> usp_HeadquaterImportBallotDetailUpdate(string ballotNum, string productCode, Nullable<int> number, Nullable<double> inputPrice, Nullable<System.DateTime> eXP, string state)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            var inputPriceParameter = inputPrice.HasValue ?
                new ObjectParameter("InputPrice", inputPrice) :
                new ObjectParameter("InputPrice", typeof(double));
    
            var eXPParameter = eXP.HasValue ?
                new ObjectParameter("EXP", eXP) :
                new ObjectParameter("EXP", typeof(System.DateTime));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HeadquaterImportBallotDetailUpdate_Result>("usp_HeadquaterImportBallotDetailUpdate", ballotNumParameter, productCodeParameter, numberParameter, inputPriceParameter, eXPParameter, stateParameter);
        }
    
        public virtual ObjectResult<usp_HeadquaterImportBallotInsert_Result> usp_HeadquaterImportBallotInsert(string ballotNum, string proposeBallotNum, Nullable<System.DateTime> inputDate, Nullable<double> total, string accountCode)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            var proposeBallotNumParameter = proposeBallotNum != null ?
                new ObjectParameter("ProposeBallotNum", proposeBallotNum) :
                new ObjectParameter("ProposeBallotNum", typeof(string));
    
            var inputDateParameter = inputDate.HasValue ?
                new ObjectParameter("InputDate", inputDate) :
                new ObjectParameter("InputDate", typeof(System.DateTime));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(double));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HeadquaterImportBallotInsert_Result>("usp_HeadquaterImportBallotInsert", ballotNumParameter, proposeBallotNumParameter, inputDateParameter, totalParameter, accountCodeParameter);
        }
    
        public virtual ObjectResult<usp_HeadquaterImportBallotSelect_Result> usp_HeadquaterImportBallotSelect(string ballotNum)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HeadquaterImportBallotSelect_Result>("usp_HeadquaterImportBallotSelect", ballotNumParameter);
        }
    
        public virtual ObjectResult<usp_HeadquaterImportBallotUpdate_Result> usp_HeadquaterImportBallotUpdate(string ballotNum, string proposeBallotNum, Nullable<System.DateTime> inputDate, Nullable<double> total, string accountCode)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            var proposeBallotNumParameter = proposeBallotNum != null ?
                new ObjectParameter("ProposeBallotNum", proposeBallotNum) :
                new ObjectParameter("ProposeBallotNum", typeof(string));
    
            var inputDateParameter = inputDate.HasValue ?
                new ObjectParameter("InputDate", inputDate) :
                new ObjectParameter("InputDate", typeof(System.DateTime));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(double));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HeadquaterImportBallotUpdate_Result>("usp_HeadquaterImportBallotUpdate", ballotNumParameter, proposeBallotNumParameter, inputDateParameter, totalParameter, accountCodeParameter);
        }
    
        public virtual int usp_PriceHistoryDelete(string productCode, Nullable<double> price, Nullable<System.DateTime> effectiveDate)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PriceHistoryDelete", productCodeParameter, priceParameter, effectiveDateParameter);
        }
    
        public virtual ObjectResult<usp_PriceHistoryInsert_Result> usp_PriceHistoryInsert(string productCode, Nullable<double> price, Nullable<System.DateTime> effectiveDate)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PriceHistoryInsert_Result>("usp_PriceHistoryInsert", productCodeParameter, priceParameter, effectiveDateParameter);
        }
    
        public virtual ObjectResult<usp_PriceHistorySelect_Result> usp_PriceHistorySelect(string productCode, Nullable<double> price, Nullable<System.DateTime> effectiveDate)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PriceHistorySelect_Result>("usp_PriceHistorySelect", productCodeParameter, priceParameter, effectiveDateParameter);
        }
    
        public virtual ObjectResult<usp_PriceHistoryUpdate_Result> usp_PriceHistoryUpdate(string productCode, Nullable<double> price, Nullable<System.DateTime> effectiveDate)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PriceHistoryUpdate_Result>("usp_PriceHistoryUpdate", productCodeParameter, priceParameter, effectiveDateParameter);
        }
    
        public virtual int usp_ProductCategoriesDelete(string typeCode)
        {
            var typeCodeParameter = typeCode != null ?
                new ObjectParameter("TypeCode", typeCode) :
                new ObjectParameter("TypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProductCategoriesDelete", typeCodeParameter);
        }
    
        public virtual ObjectResult<usp_ProductCategoriesInsert_Result> usp_ProductCategoriesInsert(string typeCode, string typeName, Nullable<int> productNum)
        {
            var typeCodeParameter = typeCode != null ?
                new ObjectParameter("TypeCode", typeCode) :
                new ObjectParameter("TypeCode", typeof(string));
    
            var typeNameParameter = typeName != null ?
                new ObjectParameter("TypeName", typeName) :
                new ObjectParameter("TypeName", typeof(string));
    
            var productNumParameter = productNum.HasValue ?
                new ObjectParameter("ProductNum", productNum) :
                new ObjectParameter("ProductNum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProductCategoriesInsert_Result>("usp_ProductCategoriesInsert", typeCodeParameter, typeNameParameter, productNumParameter);
        }
    
        public virtual ObjectResult<usp_ProductCategoriesSelect_Result> usp_ProductCategoriesSelect(string typeCode)
        {
            var typeCodeParameter = typeCode != null ?
                new ObjectParameter("TypeCode", typeCode) :
                new ObjectParameter("TypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProductCategoriesSelect_Result>("usp_ProductCategoriesSelect", typeCodeParameter);
        }
    
        public virtual ObjectResult<usp_ProductCategoriesUpdate_Result> usp_ProductCategoriesUpdate(string typeCode, string typeName, Nullable<int> productNum)
        {
            var typeCodeParameter = typeCode != null ?
                new ObjectParameter("TypeCode", typeCode) :
                new ObjectParameter("TypeCode", typeof(string));
    
            var typeNameParameter = typeName != null ?
                new ObjectParameter("TypeName", typeName) :
                new ObjectParameter("TypeName", typeof(string));
    
            var productNumParameter = productNum.HasValue ?
                new ObjectParameter("ProductNum", productNum) :
                new ObjectParameter("ProductNum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProductCategoriesUpdate_Result>("usp_ProductCategoriesUpdate", typeCodeParameter, typeNameParameter, productNumParameter);
        }
    
        public virtual int usp_ProductDelete(string productCode)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProductDelete", productCodeParameter);
        }
    
        public virtual ObjectResult<usp_ProductInsert_Result> usp_ProductInsert(string productCode, string productName, string image, string typeCode, string supplierCode)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var typeCodeParameter = typeCode != null ?
                new ObjectParameter("TypeCode", typeCode) :
                new ObjectParameter("TypeCode", typeof(string));
    
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProductInsert_Result>("usp_ProductInsert", productCodeParameter, productNameParameter, imageParameter, typeCodeParameter, supplierCodeParameter);
        }
    
        public virtual ObjectResult<usp_ProductSearch_Result> usp_ProductSearch(string tEXTSEARCH)
        {
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProductSearch_Result>("usp_ProductSearch", tEXTSEARCHParameter);
        }
    
        public virtual ObjectResult<usp_ProductSelect_Result> usp_ProductSelect(string productCode)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProductSelect_Result>("usp_ProductSelect", productCodeParameter);
        }
    
        public virtual ObjectResult<usp_ProductSelectAll_Result> usp_ProductSelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProductSelectAll_Result>("usp_ProductSelectAll");
        }
    
        public virtual ObjectResult<usp_ProductUpdate_Result> usp_ProductUpdate(string productCode, string productName, string image, string typeCode, string supplierCode)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var typeCodeParameter = typeCode != null ?
                new ObjectParameter("TypeCode", typeCode) :
                new ObjectParameter("TypeCode", typeof(string));
    
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProductUpdate_Result>("usp_ProductUpdate", productCodeParameter, productNameParameter, imageParameter, typeCodeParameter, supplierCodeParameter);
        }
    
        public virtual int usp_PromotionInformationDelete(string accountCode)
        {
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PromotionInformationDelete", accountCodeParameter);
        }
    
        public virtual ObjectResult<usp_PromotionInformationInsert_Result> usp_PromotionInformationInsert(string productCode, Nullable<double> pricePromotion, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, string cont, string image)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var pricePromotionParameter = pricePromotion.HasValue ?
                new ObjectParameter("PricePromotion", pricePromotion) :
                new ObjectParameter("PricePromotion", typeof(double));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            var contParameter = cont != null ?
                new ObjectParameter("Cont", cont) :
                new ObjectParameter("Cont", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PromotionInformationInsert_Result>("usp_PromotionInformationInsert", productCodeParameter, pricePromotionParameter, startTimeParameter, endTimeParameter, contParameter, imageParameter);
        }
    
        public virtual ObjectResult<usp_PromotionInformationSearch_Result> usp_PromotionInformationSearch(string tEXTSEARCH)
        {
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PromotionInformationSearch_Result>("usp_PromotionInformationSearch", tEXTSEARCHParameter);
        }
    
        public virtual int usp_PromotionInformationSelect(string accountCode)
        {
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PromotionInformationSelect", accountCodeParameter);
        }
    
        public virtual ObjectResult<usp_PromotionInformationSelectAll_Result> usp_PromotionInformationSelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PromotionInformationSelectAll_Result>("usp_PromotionInformationSelectAll");
        }
    
        public virtual int usp_PromotionInformationUpdate(string accountCode, string productCode, Nullable<double> pricePromotion, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, string cont, byte[] image)
        {
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var pricePromotionParameter = pricePromotion.HasValue ?
                new ObjectParameter("PricePromotion", pricePromotion) :
                new ObjectParameter("PricePromotion", typeof(double));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            var contParameter = cont != null ?
                new ObjectParameter("Cont", cont) :
                new ObjectParameter("Cont", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PromotionInformationUpdate", accountCodeParameter, productCodeParameter, pricePromotionParameter, startTimeParameter, endTimeParameter, contParameter, imageParameter);
        }
    
        public virtual int usp_ProposeBallotDelete(string ballotNum)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProposeBallotDelete", ballotNumParameter);
        }
    
        public virtual int usp_ProposeBallotDetailDelete(string ballotNum, string productCode)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProposeBallotDetailDelete", ballotNumParameter, productCodeParameter);
        }
    
        public virtual ObjectResult<usp_ProposeBallotDetailInsert_Result> usp_ProposeBallotDetailInsert(string ballotNum, string productCode, Nullable<int> number)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProposeBallotDetailInsert_Result>("usp_ProposeBallotDetailInsert", ballotNumParameter, productCodeParameter, numberParameter);
        }
    
        public virtual ObjectResult<usp_ProposeBallotDetailSelect_Result> usp_ProposeBallotDetailSelect(string ballotNum, string productCode)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProposeBallotDetailSelect_Result>("usp_ProposeBallotDetailSelect", ballotNumParameter, productCodeParameter);
        }
    
        public virtual ObjectResult<usp_ProposeBallotDetailUpdate_Result> usp_ProposeBallotDetailUpdate(string ballotNum, string productCode, Nullable<int> number)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProposeBallotDetailUpdate_Result>("usp_ProposeBallotDetailUpdate", ballotNumParameter, productCodeParameter, numberParameter);
        }
    
        public virtual ObjectResult<usp_ProposeBallotInsert_Result> usp_ProposeBallotInsert(string ballotNum, Nullable<System.DateTime> proposeDate, string supplierCode, string accountCode)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            var proposeDateParameter = proposeDate.HasValue ?
                new ObjectParameter("ProposeDate", proposeDate) :
                new ObjectParameter("ProposeDate", typeof(System.DateTime));
    
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProposeBallotInsert_Result>("usp_ProposeBallotInsert", ballotNumParameter, proposeDateParameter, supplierCodeParameter, accountCodeParameter);
        }
    
        public virtual ObjectResult<usp_ProposeBallotSelect_Result> usp_ProposeBallotSelect(string ballotNum)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProposeBallotSelect_Result>("usp_ProposeBallotSelect", ballotNumParameter);
        }
    
        public virtual ObjectResult<usp_ProposeBallotUpdate_Result> usp_ProposeBallotUpdate(string ballotNum, Nullable<System.DateTime> proposeDate, string supplierCode, string accountCode)
        {
            var ballotNumParameter = ballotNum != null ?
                new ObjectParameter("BallotNum", ballotNum) :
                new ObjectParameter("BallotNum", typeof(string));
    
            var proposeDateParameter = proposeDate.HasValue ?
                new ObjectParameter("ProposeDate", proposeDate) :
                new ObjectParameter("ProposeDate", typeof(System.DateTime));
    
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProposeBallotUpdate_Result>("usp_ProposeBallotUpdate", ballotNumParameter, proposeDateParameter, supplierCodeParameter, accountCodeParameter);
        }
    
        public virtual int usp_SupplierDelete(string supplierCode)
        {
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SupplierDelete", supplierCodeParameter);
        }
    
        public virtual ObjectResult<usp_SupplierInsert_Result> usp_SupplierInsert(string supplierCode, string supplierName, string address, string phone)
        {
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SupplierInsert_Result>("usp_SupplierInsert", supplierCodeParameter, supplierNameParameter, addressParameter, phoneParameter);
        }
    
        public virtual ObjectResult<usp_SupplierSelect_Result> usp_SupplierSelect(string supplierCode)
        {
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SupplierSelect_Result>("usp_SupplierSelect", supplierCodeParameter);
        }
    
        public virtual ObjectResult<usp_SupplierUpdate_Result> usp_SupplierUpdate(string supplierCode, string supplierName, string address, string phone)
        {
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SupplierUpdate_Result>("usp_SupplierUpdate", supplierCodeParameter, supplierNameParameter, addressParameter, phoneParameter);
        }
    
        public virtual ObjectResult<usp_PriceHistorySearch_Result> usp_PriceHistorySearch(string tEXTSEARCH)
        {
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PriceHistorySearch_Result>("usp_PriceHistorySearch", tEXTSEARCHParameter);
        }
    
        public virtual ObjectResult<SP_THONGKEDOANHTHUTHEOTHANGNAM_Result> SP_THONGKEDOANHTHUTHEOTHANGNAM(Nullable<int> tHANG, Nullable<int> nAM)
        {
            var tHANGParameter = tHANG.HasValue ?
                new ObjectParameter("THANG", tHANG) :
                new ObjectParameter("THANG", typeof(int));
    
            var nAMParameter = nAM.HasValue ?
                new ObjectParameter("NAM", nAM) :
                new ObjectParameter("NAM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_THONGKEDOANHTHUTHEOTHANGNAM_Result>("SP_THONGKEDOANHTHUTHEOTHANGNAM", tHANGParameter, nAMParameter);
        }
    
        public virtual ObjectResult<SP_THONGKEDOANHTHUTHEONGAYTHANGNAM_Result> SP_THONGKEDOANHTHUTHEONGAYTHANGNAM(Nullable<int> nGAY, Nullable<int> tHANG, Nullable<int> nAM)
        {
            var nGAYParameter = nGAY.HasValue ?
                new ObjectParameter("NGAY", nGAY) :
                new ObjectParameter("NGAY", typeof(int));
    
            var tHANGParameter = tHANG.HasValue ?
                new ObjectParameter("THANG", tHANG) :
                new ObjectParameter("THANG", typeof(int));
    
            var nAMParameter = nAM.HasValue ?
                new ObjectParameter("NAM", nAM) :
                new ObjectParameter("NAM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_THONGKEDOANHTHUTHEONGAYTHANGNAM_Result>("SP_THONGKEDOANHTHUTHEONGAYTHANGNAM", nGAYParameter, tHANGParameter, nAMParameter);
        }
    
        public virtual ObjectResult<SP_THONGKEDOANHTHUTHEONGAY_Result> SP_THONGKEDOANHTHUTHEONGAY(Nullable<int> nGAY)
        {
            var nGAYParameter = nGAY.HasValue ?
                new ObjectParameter("NGAY", nGAY) :
                new ObjectParameter("NGAY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_THONGKEDOANHTHUTHEONGAY_Result>("SP_THONGKEDOANHTHUTHEONGAY", nGAYParameter);
        }
    
        public virtual ObjectResult<SP_THONGKEDOANHTHUTHEONGAY1_Result> SP_THONGKEDOANHTHUTHEONGAY1(Nullable<System.DateTime> nGAY)
        {
            var nGAYParameter = nGAY.HasValue ?
                new ObjectParameter("NGAY", nGAY) :
                new ObjectParameter("NGAY", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_THONGKEDOANHTHUTHEONGAY1_Result>("SP_THONGKEDOANHTHUTHEONGAY1", nGAYParameter);
        }
    
        public virtual ObjectResult<SP_LASTESTPRICE_SELECT_Result> SP_LASTESTPRICE_SELECT(string productCode)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LASTESTPRICE_SELECT_Result>("SP_LASTESTPRICE_SELECT", productCodeParameter);
        }
    
        public virtual ObjectResult<SP_THONGKEDOANHTHUTHEONGAY2_Result> SP_THONGKEDOANHTHUTHEONGAY2(Nullable<System.DateTime> nGAY)
        {
            var nGAYParameter = nGAY.HasValue ?
                new ObjectParameter("NGAY", nGAY) :
                new ObjectParameter("NGAY", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_THONGKEDOANHTHUTHEONGAY2_Result>("SP_THONGKEDOANHTHUTHEONGAY2", nGAYParameter);
        }
    
        public virtual ObjectResult<SP_THONGKEDOANHTHUTHEOTHANGNAM1_Result> SP_THONGKEDOANHTHUTHEOTHANGNAM1(Nullable<int> tHANG, Nullable<int> nAM)
        {
            var tHANGParameter = tHANG.HasValue ?
                new ObjectParameter("THANG", tHANG) :
                new ObjectParameter("THANG", typeof(int));
    
            var nAMParameter = nAM.HasValue ?
                new ObjectParameter("NAM", nAM) :
                new ObjectParameter("NAM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_THONGKEDOANHTHUTHEOTHANGNAM1_Result>("SP_THONGKEDOANHTHUTHEOTHANGNAM1", tHANGParameter, nAMParameter);
        }

        public virtual ObjectResult<usp_BillSearch_Result> usp_BillSearch(string tEXTSEARCH)
        {
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BillSearch_Result>("usp_BillSearch", tEXTSEARCHParameter);
        }
    
        public virtual ObjectResult<usp_PriceHistoryLastest_Result> usp_PriceHistoryLastest(string productCode)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PriceHistoryLastest_Result>("usp_PriceHistoryLastest", productCodeParameter);
        }
    
        public virtual ObjectResult<SP_THONGKEDOANHTHUTHEONGAYS_Result> SP_THONGKEDOANHTHUTHEONGAYS(Nullable<System.DateTime> nGAY)
        {
            var nGAYParameter = nGAY.HasValue ?
                new ObjectParameter("NGAY", nGAY) :
                new ObjectParameter("NGAY", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_THONGKEDOANHTHUTHEONGAYS_Result>("SP_THONGKEDOANHTHUTHEONGAYS", nGAYParameter);
        }
    
        public virtual ObjectResult<SP_THONGKEDOANHTHUTHEOKHOANGTHOIGIAN_Result> SP_THONGKEDOANHTHUTHEOKHOANGTHOIGIAN(Nullable<System.DateTime> nGAYBATDAU, Nullable<System.DateTime> nGAYKETTHUC)
        {
            var nGAYBATDAUParameter = nGAYBATDAU.HasValue ?
                new ObjectParameter("NGAYBATDAU", nGAYBATDAU) :
                new ObjectParameter("NGAYBATDAU", typeof(System.DateTime));
    
            var nGAYKETTHUCParameter = nGAYKETTHUC.HasValue ?
                new ObjectParameter("NGAYKETTHUC", nGAYKETTHUC) :
                new ObjectParameter("NGAYKETTHUC", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_THONGKEDOANHTHUTHEOKHOANGTHOIGIAN_Result>("SP_THONGKEDOANHTHUTHEOKHOANGTHOIGIAN", nGAYBATDAUParameter, nGAYKETTHUCParameter);
        }
    
        public virtual ObjectResult<SP_THONGKEDOANHTHUTHEOKHOANGTHOIGIAN1_Result> SP_THONGKEDOANHTHUTHEOKHOANGTHOIGIAN1(Nullable<System.DateTime> nGAYBATDAU, Nullable<System.DateTime> nGAYKETTHUC)
        {
            var nGAYBATDAUParameter = nGAYBATDAU.HasValue ?
                new ObjectParameter("NGAYBATDAU", nGAYBATDAU) :
                new ObjectParameter("NGAYBATDAU", typeof(System.DateTime));
    
            var nGAYKETTHUCParameter = nGAYKETTHUC.HasValue ?
                new ObjectParameter("NGAYKETTHUC", nGAYKETTHUC) :
                new ObjectParameter("NGAYKETTHUC", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_THONGKEDOANHTHUTHEOKHOANGTHOIGIAN1_Result>("SP_THONGKEDOANHTHUTHEOKHOANGTHOIGIAN1", nGAYBATDAUParameter, nGAYKETTHUCParameter);
        }
    }
}
